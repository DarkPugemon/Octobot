From 14795337605f14acecb1617e6477c307c4802528 Mon Sep 17 00:00:00 2001
From: mctaylors <volkovvladislav8@gmail.com>
Date: Sun, 23 Oct 2022 13:39:59 +0300
Subject: [PATCH] Added event link display for created event

---
 Boyfriend/EventHandler.cs      |   2 +-
 Boyfriend/Messages.Designer.cs | 884 ++++++++++-----------------------
 Boyfriend/Messages.resx        |   2 +-
 Boyfriend/Messages.ru.resx     |   2 +-
 Boyfriend/Messages.tt-ru.resx  |   5 +-
 5 files changed, 259 insertions(+), 636 deletions(-)

diff --git a/Boyfriend/EventHandler.cs b/Boyfriend/EventHandler.cs
index 6ba2bdf..25a4410 100644
--- a/Boyfriend/EventHandler.cs
+++ b/Boyfriend/EventHandler.cs
@@ -129,7 +129,7 @@ public static class EventHandler {
             await Utils.SilentSendAsync(channel,
                 string.Format(Messages.EventCreated, "\n", roleMention, scheduledEvent.Creator.Mention,
                     Utils.Wrap(scheduledEvent.Name), location,
-                    scheduledEvent.StartTime.ToUnixTimeSeconds().ToString(), Utils.Wrap(scheduledEvent.Description)),
+                    scheduledEvent.StartTime.ToUnixTimeSeconds().ToString(), Utils.Wrap(scheduledEvent.Description), guild.Id, scheduledEvent.Id),
                 true);
         }
         if (eventConfig["EventEarlyNotificationOffset"] != "0")
diff --git a/Boyfriend/Messages.Designer.cs b/Boyfriend/Messages.Designer.cs
index 0e8babe..093cc8b 100644
--- a/Boyfriend/Messages.Designer.cs
+++ b/Boyfriend/Messages.Designer.cs
@@ -11,46 +11,32 @@ namespace Boyfriend {
     using System;
     
     
-    /// <summary>
-    ///   A strongly-typed resource class, for looking up localized strings, etc.
-    /// </summary>
-    // This class was auto-generated by the StronglyTypedResourceBuilder
-    // class via a tool like ResGen or Visual Studio.
-    // To add or remove a member, edit your .ResX file then rerun ResGen
-    // with the /str option, or rebuild your VS project.
-    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
-    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
-    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
+    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
+    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
+    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
     internal class Messages {
         
-        private static global::System.Resources.ResourceManager resourceMan;
+        private static System.Resources.ResourceManager resourceMan;
         
-        private static global::System.Globalization.CultureInfo resourceCulture;
+        private static System.Globalization.CultureInfo resourceCulture;
         
-        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
+        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
         internal Messages() {
         }
         
-        /// <summary>
-        ///   Returns the cached ResourceManager instance used by this class.
-        /// </summary>
-        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
-        internal static global::System.Resources.ResourceManager ResourceManager {
+        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
+        internal static System.Resources.ResourceManager ResourceManager {
             get {
-                if (object.ReferenceEquals(resourceMan, null)) {
-                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Boyfriend.Messages", typeof(Messages).Assembly);
+                if (object.Equals(null, resourceMan)) {
+                    System.Resources.ResourceManager temp = new System.Resources.ResourceManager("Boyfriend.Messages", typeof(Messages).Assembly);
                     resourceMan = temp;
                 }
                 return resourceMan;
             }
         }
         
-        /// <summary>
-        ///   Overrides the current thread's CurrentUICulture property for all
-        ///   resource lookups using this strongly typed resource class.
-        /// </summary>
-        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
-        internal static global::System.Globalization.CultureInfo Culture {
+        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
+        internal static System.Globalization.CultureInfo Culture {
             get {
                 return resourceCulture;
             }
@@ -59,1101 +45,735 @@ namespace Boyfriend {
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to Too many mentions in 1 message.
-        /// </summary>
-        internal static string AutobanReason {
+        internal static string Ready {
             get {
-                return ResourceManager.GetString("AutobanReason", resourceCulture);
+                return ResourceManager.GetString("Ready", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to Bah! .
-        /// </summary>
-        internal static string Beep1 {
+        internal static string CachedMessageDeleted {
             get {
-                return ResourceManager.GetString("Beep1", resourceCulture);
+                return ResourceManager.GetString("CachedMessageDeleted", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to Bop! .
-        /// </summary>
-        internal static string Beep2 {
+        internal static string AutobanReason {
             get {
-                return ResourceManager.GetString("Beep2", resourceCulture);
+                return ResourceManager.GetString("AutobanReason", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to Beep! .
-        /// </summary>
-        internal static string Beep3 {
+        internal static string CachedMessageEdited {
             get {
-                return ResourceManager.GetString("Beep3", resourceCulture);
+                return ResourceManager.GetString("CachedMessageEdited", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to I cannot ban users from this guild!.
-        /// </summary>
-        internal static string BotCannotBanMembers {
+        internal static string DefaultWelcomeMessage {
             get {
-                return ResourceManager.GetString("BotCannotBanMembers", resourceCulture);
+                return ResourceManager.GetString("DefaultWelcomeMessage", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to I cannot ban this user!.
-        /// </summary>
-        internal static string BotCannotBanTarget {
+        internal static string Beep1 {
             get {
-                return ResourceManager.GetString("BotCannotBanTarget", resourceCulture);
+                return ResourceManager.GetString("Beep1", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to I cannot kick members from this guild!.
-        /// </summary>
-        internal static string BotCannotKickMembers {
+        internal static string Beep2 {
             get {
-                return ResourceManager.GetString("BotCannotKickMembers", resourceCulture);
+                return ResourceManager.GetString("Beep2", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to I cannot kick this member!.
-        /// </summary>
-        internal static string BotCannotKickTarget {
+        internal static string Beep3 {
             get {
-                return ResourceManager.GetString("BotCannotKickTarget", resourceCulture);
+                return ResourceManager.GetString("Beep3", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to I cannot manage this guild!.
-        /// </summary>
-        internal static string BotCannotManageGuild {
+        internal static string CommandNoPermissionBot {
             get {
-                return ResourceManager.GetString("BotCannotManageGuild", resourceCulture);
+                return ResourceManager.GetString("CommandNoPermissionBot", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to I cannot manage messages in this guild!.
-        /// </summary>
-        internal static string BotCannotManageMessages {
+        internal static string CommandNoPermissionUser {
             get {
-                return ResourceManager.GetString("BotCannotManageMessages", resourceCulture);
+                return ResourceManager.GetString("CommandNoPermissionUser", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to I cannot moderate members in this guild!.
-        /// </summary>
-        internal static string BotCannotModerateMembers {
+        internal static string YouWereBanned {
             get {
-                return ResourceManager.GetString("BotCannotModerateMembers", resourceCulture);
+                return ResourceManager.GetString("YouWereBanned", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to I cannot mute this member!.
-        /// </summary>
-        internal static string BotCannotMuteTarget {
+        internal static string PunishmentExpired {
             get {
-                return ResourceManager.GetString("BotCannotMuteTarget", resourceCulture);
+                return ResourceManager.GetString("PunishmentExpired", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to I cannot unmute this member!.
-        /// </summary>
-        internal static string BotCannotUnmuteTarget {
+        internal static string ClearAmountTooSmall {
             get {
-                return ResourceManager.GetString("BotCannotUnmuteTarget", resourceCulture);
+                return ResourceManager.GetString("ClearAmountTooSmall", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to Deleted message from {0} in channel {1}: {2}.
-        /// </summary>
-        internal static string CachedMessageDeleted {
+        internal static string ClearAmountTooLarge {
             get {
-                return ResourceManager.GetString("CachedMessageDeleted", resourceCulture);
+                return ResourceManager.GetString("ClearAmountTooLarge", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to Edited message in channel {0}: {1} -&gt; {2}.
-        /// </summary>
-        internal static string CachedMessageEdited {
+        internal static string CommandHelp {
             get {
-                return ResourceManager.GetString("CachedMessageEdited", resourceCulture);
+                return ResourceManager.GetString("CommandHelp", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to I cannot use time-outs on other bots! Try to set a mute role in settings.
-        /// </summary>
-        internal static string CannotTimeOutBot {
+        internal static string YouWereKicked {
             get {
-                return ResourceManager.GetString("CannotTimeOutBot", resourceCulture);
+                return ResourceManager.GetString("YouWereKicked", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to Not specified.
-        /// </summary>
-        internal static string ChannelNotSpecified {
+        internal static string Milliseconds {
             get {
-                return ResourceManager.GetString("ChannelNotSpecified", resourceCulture);
+                return ResourceManager.GetString("Milliseconds", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to You need to specify an integer from {0} to {1} instead of {2}!.
-        /// </summary>
-        internal static string ClearAmountInvalid {
+        internal static string MemberAlreadyMuted {
             get {
-                return ResourceManager.GetString("ClearAmountInvalid", resourceCulture);
+                return ResourceManager.GetString("MemberAlreadyMuted", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to You specified more than {0} messages!.
-        /// </summary>
-        internal static string ClearAmountTooLarge {
+        internal static string ChannelNotSpecified {
             get {
-                return ResourceManager.GetString("ClearAmountTooLarge", resourceCulture);
+                return ResourceManager.GetString("ChannelNotSpecified", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to You specified less than {0} messages!.
-        /// </summary>
-        internal static string ClearAmountTooSmall {
+        internal static string RoleNotSpecified {
             get {
-                return ResourceManager.GetString("ClearAmountTooSmall", resourceCulture);
+                return ResourceManager.GetString("RoleNotSpecified", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to Bans a user.
-        /// </summary>
-        internal static string CommandDescriptionBan {
+        internal static string CurrentSettings {
             get {
-                return ResourceManager.GetString("CommandDescriptionBan", resourceCulture);
+                return ResourceManager.GetString("CurrentSettings", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to We do not support hate towards our fellow members. And sometimes, we are not able to ban the offender..
-        /// </summary>
-        internal static string CommandDescriptionCavepleaselisten {
+        internal static string SettingsLang {
             get {
-                return ResourceManager.GetString("CommandDescriptionCavepleaselisten", resourceCulture);
+                return ResourceManager.GetString("SettingsLang", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to Deletes a specified amount of messages in this channel.
-        /// </summary>
-        internal static string CommandDescriptionClear {
+        internal static string SettingsPrefix {
             get {
-                return ResourceManager.GetString("CommandDescriptionClear", resourceCulture);
+                return ResourceManager.GetString("SettingsPrefix", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to Shows this message.
-        /// </summary>
-        internal static string CommandDescriptionHelp {
+        internal static string SettingsRemoveRolesOnMute {
             get {
-                return ResourceManager.GetString("CommandDescriptionHelp", resourceCulture);
+                return ResourceManager.GetString("SettingsRemoveRolesOnMute", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to Kicks a member.
-        /// </summary>
-        internal static string CommandDescriptionKick {
+        internal static string SettingsSendWelcomeMessages {
             get {
-                return ResourceManager.GetString("CommandDescriptionKick", resourceCulture);
+                return ResourceManager.GetString("SettingsSendWelcomeMessages", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to Mutes a member.
-        /// </summary>
-        internal static string CommandDescriptionMute {
+        internal static string SettingsStarterRole {
             get {
-                return ResourceManager.GetString("CommandDescriptionMute", resourceCulture);
+                return ResourceManager.GetString("SettingsStarterRole", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to Shows (inaccurate) latency.
-        /// </summary>
-        internal static string CommandDescriptionPing {
+        internal static string SettingsMuteRole {
             get {
-                return ResourceManager.GetString("CommandDescriptionPing", resourceCulture);
+                return ResourceManager.GetString("SettingsMuteRole", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to Allows you to change certain preferences for this guild.
-        /// </summary>
-        internal static string CommandDescriptionSettings {
+        internal static string SettingsAdminLogChannel {
             get {
-                return ResourceManager.GetString("CommandDescriptionSettings", resourceCulture);
+                return ResourceManager.GetString("SettingsAdminLogChannel", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to Unbans a user.
-        /// </summary>
-        internal static string CommandDescriptionUnban {
+        internal static string SettingsBotLogChannel {
             get {
-                return ResourceManager.GetString("CommandDescriptionUnban", resourceCulture);
+                return ResourceManager.GetString("SettingsBotLogChannel", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to Unmutes a member.
-        /// </summary>
-        internal static string CommandDescriptionUnmute {
+        internal static string LanguageNotSupported {
             get {
-                return ResourceManager.GetString("CommandDescriptionUnmute", resourceCulture);
+                return ResourceManager.GetString("LanguageNotSupported", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to Command help:.
-        /// </summary>
-        internal static string CommandHelp {
+        internal static string Yes {
             get {
-                return ResourceManager.GetString("CommandHelp", resourceCulture);
+                return ResourceManager.GetString("Yes", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to I do not have permission to execute this command!.
-        /// </summary>
-        internal static string CommandNoPermissionBot {
+        internal static string No {
             get {
-                return ResourceManager.GetString("CommandNoPermissionBot", resourceCulture);
+                return ResourceManager.GetString("No", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to You do not have permission to execute this command!.
-        /// </summary>
-        internal static string CommandNoPermissionUser {
+        internal static string UserNotBanned {
             get {
-                return ResourceManager.GetString("CommandNoPermissionUser", resourceCulture);
+                return ResourceManager.GetString("UserNotBanned", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to Current settings:.
-        /// </summary>
-        internal static string CurrentSettings {
+        internal static string MemberNotMuted {
             get {
-                return ResourceManager.GetString("CurrentSettings", resourceCulture);
+                return ResourceManager.GetString("MemberNotMuted", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to {0}, welcome to {1}.
-        /// </summary>
-        internal static string DefaultWelcomeMessage {
+        internal static string RolesReturned {
             get {
-                return ResourceManager.GetString("DefaultWelcomeMessage", resourceCulture);
+                return ResourceManager.GetString("RolesReturned", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to I cannot mute someone for more than 28 days using timeouts! Either specify a duration shorter than 28 days, or set a mute role in settings.
-        /// </summary>
-        internal static string DurationRequiredForTimeOuts {
+        internal static string SettingsWelcomeMessage {
             get {
-                return ResourceManager.GetString("DurationRequiredForTimeOuts", resourceCulture);
+                return ResourceManager.GetString("SettingsWelcomeMessage", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to Event {0} is cancelled!{1}.
-        /// </summary>
-        internal static string EventCancelled {
+        internal static string ClearAmountInvalid {
             get {
-                return ResourceManager.GetString("EventCancelled", resourceCulture);
+                return ResourceManager.GetString("ClearAmountInvalid", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to Event {0} has completed! Duration: {1}.
-        /// </summary>
-        internal static string EventCompleted {
+        internal static string FeedbackUserBanned {
             get {
-                return ResourceManager.GetString("EventCompleted", resourceCulture);
+                return ResourceManager.GetString("FeedbackUserBanned", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to {1}{2} created event {3}! It will take place in {4} and will start &lt;t:{5}:R&gt;!{0}{6}.
-        /// </summary>
-        internal static string EventCreated {
+        internal static string UserNotInGuild {
             get {
-                return ResourceManager.GetString("EventCreated", resourceCulture);
+                return ResourceManager.GetString("UserNotInGuild", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to {0}Event {1} will start &lt;t:{2}:R&gt;!.
-        /// </summary>
-        internal static string EventEarlyNotification {
+        internal static string SettingDoesntExist {
             get {
-                return ResourceManager.GetString("EventEarlyNotification", resourceCulture);
+                return ResourceManager.GetString("SettingDoesntExist", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to {0}Event {1} is starting at {2}!.
-        /// </summary>
-        internal static string EventStarted {
+        internal static string SettingsReceiveStartupMessages {
             get {
-                return ResourceManager.GetString("EventStarted", resourceCulture);
+                return ResourceManager.GetString("SettingsReceiveStartupMessages", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to ever.
-        /// </summary>
-        internal static string Ever {
+        internal static string InvalidSettingValue {
             get {
-                return ResourceManager.GetString("Ever", resourceCulture);
+                return ResourceManager.GetString("InvalidSettingValue", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to *[{0}: {1}]*.
-        /// </summary>
-        internal static string FeedbackFormat {
+        internal static string InvalidRole {
             get {
-                return ResourceManager.GetString("FeedbackFormat", resourceCulture);
+                return ResourceManager.GetString("InvalidRole", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to Kicked {0}: {1}.
-        /// </summary>
-        internal static string FeedbackMemberKicked {
+        internal static string InvalidChannel {
             get {
-                return ResourceManager.GetString("FeedbackMemberKicked", resourceCulture);
+                return ResourceManager.GetString("InvalidChannel", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to Muted {0} for{1}: {2}.
-        /// </summary>
-        internal static string FeedbackMemberMuted {
+        internal static string RoleRemovalFailed {
             get {
-                return ResourceManager.GetString("FeedbackMemberMuted", resourceCulture);
+                return ResourceManager.GetString("RoleRemovalFailed", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to Unmuted {0}: {1}.
-        /// </summary>
-        internal static string FeedbackMemberUnmuted {
+        internal static string DurationRequiredForTimeOuts {
             get {
-                return ResourceManager.GetString("FeedbackMemberUnmuted", resourceCulture);
+                return ResourceManager.GetString("DurationRequiredForTimeOuts", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to Deleted {0} messages in {1}.
-        /// </summary>
-        internal static string FeedbackMessagesCleared {
+        internal static string CannotTimeOutBot {
             get {
-                return ResourceManager.GetString("FeedbackMessagesCleared", resourceCulture);
+                return ResourceManager.GetString("CannotTimeOutBot", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to Value of setting `{0}` is now set to {1}.
-        /// </summary>
-        internal static string FeedbackSettingsUpdated {
+        internal static string EventCreated {
             get {
-                return ResourceManager.GetString("FeedbackSettingsUpdated", resourceCulture);
+                return ResourceManager.GetString("EventCreated", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to Banned {0} for{1}: {2}.
-        /// </summary>
-        internal static string FeedbackUserBanned {
+        internal static string SettingsEventNotifyReceiverRole {
             get {
-                return ResourceManager.GetString("FeedbackUserBanned", resourceCulture);
+                return ResourceManager.GetString("SettingsEventNotifyReceiverRole", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to Unbanned {0}: {1}.
-        /// </summary>
-        internal static string FeedbackUserUnbanned {
+        internal static string SettingsEventCreatedChannel {
             get {
-                return ResourceManager.GetString("FeedbackUserUnbanned", resourceCulture);
+                return ResourceManager.GetString("SettingsEventCreatedChannel", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to This channel does not exist!.
-        /// </summary>
-        internal static string InvalidChannel {
+        internal static string SettingsEventStartedChannel {
             get {
-                return ResourceManager.GetString("InvalidChannel", resourceCulture);
+                return ResourceManager.GetString("SettingsEventStartedChannel", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to You need to specify a guild member instead of {0}!.
-        /// </summary>
-        internal static string InvalidMember {
+        internal static string SettingsEventStartedReceivers {
             get {
-                return ResourceManager.GetString("InvalidMember", resourceCulture);
+                return ResourceManager.GetString("SettingsEventStartedReceivers", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to This role does not exist!.
-        /// </summary>
-        internal static string InvalidRole {
+        internal static string EventStarted {
             get {
-                return ResourceManager.GetString("InvalidRole", resourceCulture);
+                return ResourceManager.GetString("EventStarted", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to Invalid setting value specified!.
-        /// </summary>
-        internal static string InvalidSettingValue {
+        internal static string SettingsFrowningFace {
             get {
-                return ResourceManager.GetString("InvalidSettingValue", resourceCulture);
+                return ResourceManager.GetString("SettingsFrowningFace", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to You need to specify a user instead of {0}!.
-        /// </summary>
-        internal static string InvalidUser {
+        internal static string EventCancelled {
             get {
-                return ResourceManager.GetString("InvalidUser", resourceCulture);
+                return ResourceManager.GetString("EventCancelled", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to Language not supported!.
-        /// </summary>
-        internal static string LanguageNotSupported {
+        internal static string SettingsEventCancelledChannel {
             get {
-                return ResourceManager.GetString("LanguageNotSupported", resourceCulture);
+                return ResourceManager.GetString("SettingsEventCancelledChannel", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to Member is already muted!.
-        /// </summary>
-        internal static string MemberAlreadyMuted {
+        internal static string SettingsEventCompletedChannel {
             get {
-                return ResourceManager.GetString("MemberAlreadyMuted", resourceCulture);
+                return ResourceManager.GetString("SettingsEventCompletedChannel", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to Member not muted!.
-        /// </summary>
-        internal static string MemberNotMuted {
+        internal static string EventCompleted {
             get {
-                return ResourceManager.GetString("MemberNotMuted", resourceCulture);
+                return ResourceManager.GetString("EventCompleted", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to ms.
-        /// </summary>
-        internal static string Milliseconds {
+        internal static string FeedbackFormat {
             get {
-                return ResourceManager.GetString("Milliseconds", resourceCulture);
+                return ResourceManager.GetString("FeedbackFormat", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to You need to specify a reason to ban this user!.
-        /// </summary>
-        internal static string MissingBanReason {
+        internal static string Ever {
             get {
-                return ResourceManager.GetString("MissingBanReason", resourceCulture);
+                return ResourceManager.GetString("Ever", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to You need to specify a reason to kick this member!.
-        /// </summary>
-        internal static string MissingKickReason {
+        internal static string FeedbackMessagesCleared {
             get {
-                return ResourceManager.GetString("MissingKickReason", resourceCulture);
+                return ResourceManager.GetString("FeedbackMessagesCleared", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to You need to specify a guild member!.
-        /// </summary>
-        internal static string MissingMember {
+        internal static string FeedbackMemberKicked {
             get {
-                return ResourceManager.GetString("MissingMember", resourceCulture);
+                return ResourceManager.GetString("FeedbackMemberKicked", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to You need to specify a reason to mute this member!.
-        /// </summary>
-        internal static string MissingMuteReason {
+        internal static string FeedbackMemberMuted {
             get {
-                return ResourceManager.GetString("MissingMuteReason", resourceCulture);
+                return ResourceManager.GetString("FeedbackMemberMuted", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to You need to specify an integer from {0} to {1}!.
-        /// </summary>
-        internal static string MissingNumber {
+        internal static string FeedbackUserUnbanned {
             get {
-                return ResourceManager.GetString("MissingNumber", resourceCulture);
+                return ResourceManager.GetString("FeedbackUserUnbanned", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to You need to specify a setting to change!.
-        /// </summary>
-        internal static string MissingSetting {
+        internal static string FeedbackMemberUnmuted {
             get {
-                return ResourceManager.GetString("MissingSetting", resourceCulture);
+                return ResourceManager.GetString("FeedbackMemberUnmuted", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to You need to specify a reason to unban this user!.
-        /// </summary>
-        internal static string MissingUnbanReason {
+        internal static string SettingsNothingChanged {
             get {
-                return ResourceManager.GetString("MissingUnbanReason", resourceCulture);
+                return ResourceManager.GetString("SettingsNothingChanged", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to You need to specify a reason for unmute this member!.
-        /// </summary>
-        internal static string MissingUnmuteReason {
+        internal static string SettingNotDefined {
             get {
-                return ResourceManager.GetString("MissingUnmuteReason", resourceCulture);
+                return ResourceManager.GetString("SettingNotDefined", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to You need to specify a user!.
-        /// </summary>
-        internal static string MissingUser {
+        internal static string FeedbackSettingsUpdated {
             get {
-                return ResourceManager.GetString("MissingUser", resourceCulture);
+                return ResourceManager.GetString("FeedbackSettingsUpdated", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to No.
-        /// </summary>
-        internal static string No {
+        internal static string CommandDescriptionBan {
             get {
-                return ResourceManager.GetString("No", resourceCulture);
+                return ResourceManager.GetString("CommandDescriptionBan", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to Punishment expired.
-        /// </summary>
-        internal static string PunishmentExpired {
+        internal static string CommandDescriptionClear {
             get {
-                return ResourceManager.GetString("PunishmentExpired", resourceCulture);
+                return ResourceManager.GetString("CommandDescriptionClear", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to {0}I&apos;m ready! (C#).
-        /// </summary>
-        internal static string Ready {
+        internal static string CommandDescriptionHelp {
             get {
-                return ResourceManager.GetString("Ready", resourceCulture);
+                return ResourceManager.GetString("CommandDescriptionHelp", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to Not specified.
-        /// </summary>
-        internal static string RoleNotSpecified {
+        internal static string CommandDescriptionKick {
             get {
-                return ResourceManager.GetString("RoleNotSpecified", resourceCulture);
+                return ResourceManager.GetString("CommandDescriptionKick", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to I couldn&apos;t remove role {0} because of an error! {1}.
-        /// </summary>
-        internal static string RoleRemovalFailed {
+        internal static string CommandDescriptionMute {
             get {
-                return ResourceManager.GetString("RoleRemovalFailed", resourceCulture);
+                return ResourceManager.GetString("CommandDescriptionMute", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to Someone removed the mute role manually! I added back all roles that I removed during the mute.
-        /// </summary>
-        internal static string RolesReturned {
+        internal static string CommandDescriptionPing {
             get {
-                return ResourceManager.GetString("RolesReturned", resourceCulture);
+                return ResourceManager.GetString("CommandDescriptionPing", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to This feature is unavailable because this guild is currently blacklisted..
-        /// </summary>
-        internal static string ServerBlacklisted {
+        internal static string CommandDescriptionSettings {
             get {
-                return ResourceManager.GetString("ServerBlacklisted", resourceCulture);
+                return ResourceManager.GetString("CommandDescriptionSettings", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to That setting doesn&apos;t exist!.
-        /// </summary>
-        internal static string SettingDoesntExist {
+        internal static string CommandDescriptionUnban {
             get {
-                return ResourceManager.GetString("SettingDoesntExist", resourceCulture);
+                return ResourceManager.GetString("CommandDescriptionUnban", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to Not specified.
-        /// </summary>
-        internal static string SettingNotDefined {
+        internal static string CommandDescriptionUnmute {
             get {
-                return ResourceManager.GetString("SettingNotDefined", resourceCulture);
+                return ResourceManager.GetString("CommandDescriptionUnmute", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to Admin log channel.
-        /// </summary>
-        internal static string SettingsAdminLogChannel {
+        internal static string MissingNumber {
             get {
-                return ResourceManager.GetString("SettingsAdminLogChannel", resourceCulture);
+                return ResourceManager.GetString("MissingNumber", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to Bot log channel.
-        /// </summary>
-        internal static string SettingsBotLogChannel {
+        internal static string MissingUser {
             get {
-                return ResourceManager.GetString("SettingsBotLogChannel", resourceCulture);
+                return ResourceManager.GetString("MissingUser", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to Channel for event cancellation notifications.
-        /// </summary>
-        internal static string SettingsEventCancelledChannel {
+        internal static string InvalidUser {
             get {
-                return ResourceManager.GetString("SettingsEventCancelledChannel", resourceCulture);
+                return ResourceManager.GetString("InvalidUser", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to Channel for event completion notifications.
-        /// </summary>
-        internal static string SettingsEventCompletedChannel {
+        internal static string MissingMember {
             get {
-                return ResourceManager.GetString("SettingsEventCompletedChannel", resourceCulture);
+                return ResourceManager.GetString("MissingMember", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to Channel for event creation notifications.
-        /// </summary>
-        internal static string SettingsEventCreatedChannel {
+        internal static string InvalidMember {
             get {
-                return ResourceManager.GetString("SettingsEventCreatedChannel", resourceCulture);
+                return ResourceManager.GetString("InvalidMember", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to .
-        /// </summary>
-        internal static string SettingsEventEarlyNotificationOffset {
+        internal static string UserCannotBanMembers {
             get {
-                return ResourceManager.GetString("SettingsEventEarlyNotificationOffset", resourceCulture);
+                return ResourceManager.GetString("UserCannotBanMembers", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to Role for event creation notifications.
-        /// </summary>
-        internal static string SettingsEventNotifyReceiverRole {
+        internal static string UserCannotManageMessages {
             get {
-                return ResourceManager.GetString("SettingsEventNotifyReceiverRole", resourceCulture);
+                return ResourceManager.GetString("UserCannotManageMessages", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to Channel for event start notifications.
-        /// </summary>
-        internal static string SettingsEventStartedChannel {
+        internal static string UserCannotKickMembers {
             get {
-                return ResourceManager.GetString("SettingsEventStartedChannel", resourceCulture);
+                return ResourceManager.GetString("UserCannotKickMembers", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to Event start notifications receivers.
-        /// </summary>
-        internal static string SettingsEventStartedReceivers {
+        internal static string UserCannotModerateMembers {
             get {
-                return ResourceManager.GetString("SettingsEventStartedReceivers", resourceCulture);
+                return ResourceManager.GetString("UserCannotModerateMembers", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to :(.
-        /// </summary>
-        internal static string SettingsFrowningFace {
+        internal static string UserCannotManageGuild {
             get {
-                return ResourceManager.GetString("SettingsFrowningFace", resourceCulture);
+                return ResourceManager.GetString("UserCannotManageGuild", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to Language.
-        /// </summary>
-        internal static string SettingsLang {
+        internal static string BotCannotBanMembers {
             get {
-                return ResourceManager.GetString("SettingsLang", resourceCulture);
+                return ResourceManager.GetString("BotCannotBanMembers", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to Mute role.
-        /// </summary>
-        internal static string SettingsMuteRole {
+        internal static string BotCannotManageMessages {
             get {
-                return ResourceManager.GetString("SettingsMuteRole", resourceCulture);
+                return ResourceManager.GetString("BotCannotManageMessages", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to Nothing changed! `{0}` is already set to {1}.
-        /// </summary>
-        internal static string SettingsNothingChanged {
+        internal static string BotCannotKickMembers {
             get {
-                return ResourceManager.GetString("SettingsNothingChanged", resourceCulture);
+                return ResourceManager.GetString("BotCannotKickMembers", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to Prefix.
-        /// </summary>
-        internal static string SettingsPrefix {
+        internal static string BotCannotModerateMembers {
             get {
-                return ResourceManager.GetString("SettingsPrefix", resourceCulture);
+                return ResourceManager.GetString("BotCannotModerateMembers", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to Receive startup messages.
-        /// </summary>
-        internal static string SettingsReceiveStartupMessages {
+        internal static string BotCannotManageGuild {
             get {
-                return ResourceManager.GetString("SettingsReceiveStartupMessages", resourceCulture);
+                return ResourceManager.GetString("BotCannotManageGuild", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to Remove roles on mute.
-        /// </summary>
-        internal static string SettingsRemoveRolesOnMute {
+        internal static string MissingBanReason {
             get {
-                return ResourceManager.GetString("SettingsRemoveRolesOnMute", resourceCulture);
+                return ResourceManager.GetString("MissingBanReason", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to Send welcome messages.
-        /// </summary>
-        internal static string SettingsSendWelcomeMessages {
+        internal static string MissingKickReason {
             get {
-                return ResourceManager.GetString("SettingsSendWelcomeMessages", resourceCulture);
+                return ResourceManager.GetString("MissingKickReason", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to Starter role.
-        /// </summary>
-        internal static string SettingsStarterRole {
+        internal static string MissingMuteReason {
             get {
-                return ResourceManager.GetString("SettingsStarterRole", resourceCulture);
+                return ResourceManager.GetString("MissingMuteReason", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to Welcome message.
-        /// </summary>
-        internal static string SettingsWelcomeMessage {
+        internal static string MissingUnbanReason {
             get {
-                return ResourceManager.GetString("SettingsWelcomeMessage", resourceCulture);
+                return ResourceManager.GetString("MissingUnbanReason", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to You cannot ban me!.
-        /// </summary>
-        internal static string UserCannotBanBot {
+        internal static string MissingUnmuteReason {
             get {
-                return ResourceManager.GetString("UserCannotBanBot", resourceCulture);
+                return ResourceManager.GetString("MissingUnmuteReason", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to You cannot ban users from this guild!.
-        /// </summary>
-        internal static string UserCannotBanMembers {
+        internal static string MissingSetting {
             get {
-                return ResourceManager.GetString("UserCannotBanMembers", resourceCulture);
+                return ResourceManager.GetString("MissingSetting", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to You cannot ban the owner of this guild!.
-        /// </summary>
         internal static string UserCannotBanOwner {
             get {
                 return ResourceManager.GetString("UserCannotBanOwner", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to You cannot ban this user!.
-        /// </summary>
-        internal static string UserCannotBanTarget {
-            get {
-                return ResourceManager.GetString("UserCannotBanTarget", resourceCulture);
-            }
-        }
-        
-        /// <summary>
-        ///   Looks up a localized string similar to You cannot ban yourself!.
-        /// </summary>
         internal static string UserCannotBanThemselves {
             get {
                 return ResourceManager.GetString("UserCannotBanThemselves", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to You cannot kick me!.
-        /// </summary>
-        internal static string UserCannotKickBot {
+        internal static string UserCannotBanBot {
             get {
-                return ResourceManager.GetString("UserCannotKickBot", resourceCulture);
+                return ResourceManager.GetString("UserCannotBanBot", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to You cannot kick members from this guild!.
-        /// </summary>
-        internal static string UserCannotKickMembers {
+        internal static string BotCannotBanTarget {
             get {
-                return ResourceManager.GetString("UserCannotKickMembers", resourceCulture);
+                return ResourceManager.GetString("BotCannotBanTarget", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to You cannot kick the owner of this guild!.
-        /// </summary>
-        internal static string UserCannotKickOwner {
+        internal static string UserCannotBanTarget {
             get {
-                return ResourceManager.GetString("UserCannotKickOwner", resourceCulture);
+                return ResourceManager.GetString("UserCannotBanTarget", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to You cannot kick this member!.
-        /// </summary>
-        internal static string UserCannotKickTarget {
+        internal static string UserCannotKickOwner {
             get {
-                return ResourceManager.GetString("UserCannotKickTarget", resourceCulture);
+                return ResourceManager.GetString("UserCannotKickOwner", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to You cannot kick yourself!.
-        /// </summary>
         internal static string UserCannotKickThemselves {
             get {
                 return ResourceManager.GetString("UserCannotKickThemselves", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to You cannot manage this guild!.
-        /// </summary>
-        internal static string UserCannotManageGuild {
+        internal static string UserCannotKickBot {
             get {
-                return ResourceManager.GetString("UserCannotManageGuild", resourceCulture);
+                return ResourceManager.GetString("UserCannotKickBot", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to You cannot manage messages in this guild!.
-        /// </summary>
-        internal static string UserCannotManageMessages {
+        internal static string BotCannotKickTarget {
             get {
-                return ResourceManager.GetString("UserCannotManageMessages", resourceCulture);
+                return ResourceManager.GetString("BotCannotKickTarget", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to You cannot moderate members in this guild!.
-        /// </summary>
-        internal static string UserCannotModerateMembers {
+        internal static string UserCannotKickTarget {
             get {
-                return ResourceManager.GetString("UserCannotModerateMembers", resourceCulture);
+                return ResourceManager.GetString("UserCannotKickTarget", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to You cannot mute me!.
-        /// </summary>
-        internal static string UserCannotMuteBot {
+        internal static string UserCannotMuteOwner {
             get {
-                return ResourceManager.GetString("UserCannotMuteBot", resourceCulture);
+                return ResourceManager.GetString("UserCannotMuteOwner", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to You cannot mute the owner of this guild!.
-        /// </summary>
-        internal static string UserCannotMuteOwner {
+        internal static string UserCannotMuteThemselves {
             get {
-                return ResourceManager.GetString("UserCannotMuteOwner", resourceCulture);
+                return ResourceManager.GetString("UserCannotMuteThemselves", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to You cannot mute this member!.
-        /// </summary>
-        internal static string UserCannotMuteTarget {
+        internal static string UserCannotMuteBot {
             get {
-                return ResourceManager.GetString("UserCannotMuteTarget", resourceCulture);
+                return ResourceManager.GetString("UserCannotMuteBot", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to You cannot mute yourself!.
-        /// </summary>
-        internal static string UserCannotMuteThemselves {
+        internal static string BotCannotMuteTarget {
             get {
-                return ResourceManager.GetString("UserCannotMuteThemselves", resourceCulture);
+                return ResourceManager.GetString("BotCannotMuteTarget", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to ....
-        /// </summary>
-        internal static string UserCannotUnmuteBot {
+        internal static string UserCannotMuteTarget {
             get {
-                return ResourceManager.GetString("UserCannotUnmuteBot", resourceCulture);
+                return ResourceManager.GetString("UserCannotMuteTarget", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to You don&apos;t need to unmute the owner of this guild!.
-        /// </summary>
         internal static string UserCannotUnmuteOwner {
             get {
                 return ResourceManager.GetString("UserCannotUnmuteOwner", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to You cannot unmute this user!.
-        /// </summary>
-        internal static string UserCannotUnmuteTarget {
+        internal static string UserCannotUnmuteThemselves {
             get {
-                return ResourceManager.GetString("UserCannotUnmuteTarget", resourceCulture);
+                return ResourceManager.GetString("UserCannotUnmuteThemselves", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to You are muted!.
-        /// </summary>
-        internal static string UserCannotUnmuteThemselves {
+        internal static string UserCannotUnmuteBot {
             get {
-                return ResourceManager.GetString("UserCannotUnmuteThemselves", resourceCulture);
+                return ResourceManager.GetString("UserCannotUnmuteBot", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to This user is not banned!.
-        /// </summary>
-        internal static string UserNotBanned {
+        internal static string BotCannotUnmuteTarget {
             get {
-                return ResourceManager.GetString("UserNotBanned", resourceCulture);
+                return ResourceManager.GetString("BotCannotUnmuteTarget", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to The specified user is not a member of this server!.
-        /// </summary>
-        internal static string UserNotInGuild {
+        internal static string UserCannotUnmuteTarget {
             get {
-                return ResourceManager.GetString("UserNotInGuild", resourceCulture);
+                return ResourceManager.GetString("UserCannotUnmuteTarget", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to Yes.
-        /// </summary>
-        internal static string Yes {
+        internal static string CommandDescriptionCavepleaselisten {
             get {
-                return ResourceManager.GetString("Yes", resourceCulture);
+                return ResourceManager.GetString("CommandDescriptionCavepleaselisten", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to You were banned by {0} in guild {1} for {2}.
-        /// </summary>
-        internal static string YouWereBanned {
+        internal static string ServerBlacklisted {
             get {
-                return ResourceManager.GetString("YouWereBanned", resourceCulture);
+                return ResourceManager.GetString("ServerBlacklisted", resourceCulture);
             }
         }
         
-        /// <summary>
-        ///   Looks up a localized string similar to You were kicked by {0} in guild {1} for {2}.
-        /// </summary>
-        internal static string YouWereKicked {
+        internal static string EventEarlyNotification {
             get {
-                return ResourceManager.GetString("YouWereKicked", resourceCulture);
+                return ResourceManager.GetString("EventEarlyNotification", resourceCulture);
+            }
+        }
+        
+        internal static string SettingsEventEarlyNotificationOffset {
+            get {
+                return ResourceManager.GetString("SettingsEventEarlyNotificationOffset", resourceCulture);
             }
         }
     }
diff --git a/Boyfriend/Messages.resx b/Boyfriend/Messages.resx
index 6615656..a06e8cc 100644
--- a/Boyfriend/Messages.resx
+++ b/Boyfriend/Messages.resx
@@ -166,7 +166,7 @@
         <value>I cannot use time-outs on other bots! Try to set a mute role in settings</value>
     </data>
     <data name="EventCreated" xml:space="preserve">
-        <value>{1}{2} created event {3}! It will take place in {4} and will start &lt;t:{5}:R&gt;!{0}{6}</value>
+        <value>{1}{2} created event {3}! It will take place in {4} and will start &lt;t:{5}:R&gt;!{0}{6}{0}https://discord.com/events/{7}/{8}</value>
     </data>
     <data name="SettingsEventNotifyReceiverRole" xml:space="preserve">
         <value>Role for event creation notifications</value>
diff --git a/Boyfriend/Messages.ru.resx b/Boyfriend/Messages.ru.resx
index 5f92c9d..b593ef5 100644
--- a/Boyfriend/Messages.ru.resx
+++ b/Boyfriend/Messages.ru.resx
@@ -157,7 +157,7 @@
         <value>Начальная роль</value>
     </data>
     <data name="EventCreated" xml:space="preserve">
-        <value>{1}{2} создал событие {3}! Оно пройдёт в {4} и начнётся &lt;t:{5}:R&gt;!{0}{6}</value>
+        <value>{1}{2} создал событие {3}! Оно пройдёт в {4} и начнётся &lt;t:{5}:R&gt;!{0}{6}{0}https://discord.com/events/{7}/{8}</value>
     </data>
     <data name="SettingsEventNotifyReceiverRole" xml:space="preserve">
         <value>Роль для уведомлений о создании событий</value>
diff --git a/Boyfriend/Messages.tt-ru.resx b/Boyfriend/Messages.tt-ru.resx
index 0d676cd..b49d3ef 100644
--- a/Boyfriend/Messages.tt-ru.resx
+++ b/Boyfriend/Messages.tt-ru.resx
@@ -153,7 +153,7 @@
         <value>базовое звание</value>
     </data>
     <data name="EventCreated" xml:space="preserve">
-        <value>{1}{2} приготовил новый квест {3}! он пройдёт в {4} и начнётся &lt;t:{5}:R&gt;!{0}{6}</value>
+        <value>{1}{2} приготовил новый квест {3}! он пройдёт в {4} и начнётся &lt;t:{5}:R&gt;!{0}{6}{0}https://discord.com/events/{7}/{8}</value>
     </data>
     <data name="SettingsEventNotifyReceiverRole" xml:space="preserve">
         <value>роль для уведомлений о создании квеста</value>
@@ -371,4 +371,7 @@
     <data name="ServerBlacklisted" xml:space="preserve">
         <value>упс, кажется ваш сервер в черном списке, и я вам ничем помочь не смогу)</value>
     </data>
+    <data name="EventEarlyNotification" xml:space="preserve">
+        <value>{0}квест {1} начнется&lt;t:{2}:R&gt;!</value>
+    </data>
 </root>
\ No newline at end of file
-- 
2.34.1.windows.1

